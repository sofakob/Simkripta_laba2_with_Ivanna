
def algoritm_evklida_with_input():

    '''
    Функція саме для демонстрації роботи алгоритму, бере дані не внутрішньо, а можна користуватися як звичайний коритувач
    
    '''
    b=int(input("Введіть число до якого треба знайти обернене: ")) # тут беремо числа з вводу користувача
    a=int(input("Введіть модуль за яким треба знайти обернене: "))
    if b>a:
        b%=a
    q=0
    u=1; v=0; u1=0; v1=1
    while a>b:
        c=a
        while c>b:
            c=c-b
            q+=1
        a=b; b=c
        u2=u-u1*q
        v2=v-v1*q
        u=u1; v=v1; u1=u2; v1=v2; q=0
    print(f"Обернене число дорівнює: {v1}")
    #Функція нічого не повертає для зручності

def algoritm_evklida_with_a_b(b:int, a:int):
    '''
    Алгоритм евкліда теж таблична реалізація, при цікавості можна вивести табличкою. Ця функція була переписана з того, що я писала на с++
    ще на першому курсі, але повертаємо тільки обернене
    а число за модулем якого ми шукаємо обернене
    b число для якого ми шукаємо обернене
    додатково є вимога що а та b повинні бути інтови, щоби випадково не було приколів
    '''
    if b>a:
        b%=a
    q=0
    u=1; v=0; u1=0; v1=1
    while a>b:
        c=a
        while c>b:
            c=c-b
            q+=1
        a=b; b=c
        u2=u-u1*q
        v2=v-v1*q
        u=u1; v=v1; u1=u2; v1=v2; q=0
    return v1
    
print(algoritm_evklida_with_a_b(5, 12)) # повертає -7